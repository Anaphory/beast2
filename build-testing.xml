<project basedir="." default="test" name="BEAST 2 Unit Tests"
	xmlns:fx="javafx:com.sun.javafx.tools.ant">
    <description>
        Simplified build script for running unit tests only.
        Not for producing releases.
    </description>

    <!-- set global properties for this build -->
    <property name="src" location="src" />
    <property name="build" location="build" />
    <property name="lib" location="lib" />
    <property name="doc" location="doc" />
    <property name="dist" location="build/dist" />
    <property name="test" location="test" />

    <property name="main_class_BEASTLauncher" value="beast.app.beastapp.BeastLauncher" />
    <property name="report" value="build/junitreport" />

    <path id="classpath">
        <fileset dir="${lib}" includes="beagle.jar"/>
        <fileset dir="${lib}" includes="jam.jar"/>
        <fileset dir="${lib}" includes="colt.jar"/>
        <fileset dir="${lib}" includes="fest.jar"/>
        <fileset dir="${lib}" includes="junit-4.8.2.jar"/>
        <fileset dir="${lib}" includes="antlr-runtime-4.7.jar"/>
    </path>

    <target name="init">
        <echo message="${ant.project.name}: ${ant.file}" />
    </target>

    <target name="clean">
        <delete dir="${build}" />
        <delete dir="${test}" />
    </target>

    <!-- compile Java source code -->
    <target name="compile-all" depends="init">
        <echo>Building BEAST 2</echo>
        <mkdir dir="${build}" />

        <!-- Compile the java code from ${src} into ${build} /bin -->
        <javac source="1.8"
		target="1.8"
		bootclasspath='/opt/jdk1.8.0_131/jre/lib/rt.jar'
               srcdir="${src}"
               destdir="${build}"
               classpathref="classpath"
               fork="true"
               memoryinitialsize="256m"
               memorymaximumsize="1024m"
               includeAntRuntime='false'>
            <include name="beast/**/**" />
            <!-- apache commons math -->
            <include name="org/**/**" />
            <!-- compile JUnit test classes -->
            <include name="test/beast/**" />
        </javac>

        <echo message="Ant running on Java version ${ant.java.version}"/>

        <!-- compile the launcher apps against Java 6-->
        <delete file="${build}/beast/app/beauti/BeautiLauncher.class" />
        <delete file="${build}/beast/app/tools/AppLauncherLauncher.class" />
        <delete file="${build}/beast/app/tools/LogCombinerLauncher.class" />
        <delete file="${build}/beast/app/treeannotator/TreeAnnotatorLauncher.class" />
        <delete file="${build}/beast/app/util/Utils6.class" />
        <delete file="${build}/beast/app/BEASTVersion.class" />
        <delete file="${build}/beast/util/BEASTClassLoader.class" />
        <delete>
	      <fileset dir="${build}/beast/core/util/" includes="Log*.class" />
    	  <fileset dir="${build}/beast/app/beastapp/" includes="BeastLauncher*.class" />
	      <fileset dir="${build}/beast/app/util/" includes="Arguments*.class"/>
	      <fileset dir="${build}/beast/util/" includes="Package*.class"/>
    	</delete>
        <delete file="${build}/beast/app/util/Version.class" />
        <javac source="1.6"
               target="1.6"
               bootclasspath='/opt/jdk1.6.0_45/jre/lib/rt.jar'
               srcdir="${src}"
               destdir="${build}"
               classpathref="classpath"
               fork="true"
               memoryinitialsize="256m"
               memorymaximumsize="1024m"
               includeAntRuntime='false'>
            <include name="beast/**/*Launcher.java" />
            <include name="beast/**/Utils6.java" />
            <include name="beast/**/BEASTVersion.java" />
            <include name="beast/**/Version.java" />
            <include name="beast/util/Package*.java" />
            <include name="beast/app/util/Arguments.java" />
            <include name="beast/core/util/Log.java" />
	    <include name="beast/util/BEASTClassLoader.java" />
        </javac>
        <copy todir="${build}">
            <fileset dir="${src}" includes="**/*.properties" />
            <fileset dir="${src}" includes="**/*.png" />
        </copy>
        <echo message="Successfully compiled." />
    </target>

    <!-- Core BEAST unit tests -->
    <target name="junit">
        <mkdir dir="${report}" />
        <junit printsummary="yes" failureproperty="junitfailed">
            <!--showoutput='yes'-->
            <classpath>
                <path refid="classpath" />
                <path location="${build}" />
            </classpath>

            <formatter type="xml" />

            <batchtest fork="yes" todir="${report}">
                <fileset dir="${src}">
                    <include name="test/**/*Test.java" />
                    <exclude name="test/beast/beast2vs1/**/*Test.java"/>
                    <exclude name="test/beast/app/beauti/**/*Test.java"/>
                </fileset>
            </batchtest>
        </junit>
        <echo message="JUnit test finished." />
    </target>

    <!-- BEAUti UI unit tests -->
    <target name="junitb">
        <mkdir dir="${report}" />
        <junit printsummary="yes" failureproperty="junitbfailed" maxmemory="4G">
            <!--showoutput='yes'-->
            <classpath>
                <path refid="classpath" />
                <path location="${build}" />
            </classpath>

            <formatter type="xml" />

            <batchtest fork="yes" todir="${report}">
                <fileset dir="${src}">
                    <include name="test/beast/app/beauti/**/*Test.java"/>
                </fileset>
            </batchtest>
        </junit>
        <echo message="JUnit test finished." />
    </target>

    <!-- Target for Travis-CI with non-zero exit status on test failure. -->
    <target name="test" depends="clean, compile-all, junit, junitb">
        <fail if="junitfailed" message="One or more CORE BEAST tests failed."/>
        <fail if="junitbfailed" message="One or more BEAUTI tests failed."/>
    </target>

  </project>
